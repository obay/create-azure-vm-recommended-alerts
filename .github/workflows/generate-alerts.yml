name: Generate Azure VM Alerts

on:
  workflow_dispatch:
    inputs:
      alertsResourceGroupName:
        description: 'Resource Group for Alerts'
        required: true
        type: string
      actionGroupResourceGroupName:
        description: 'Resource Group for Action Group'
        required: true
        type: string
      actionGroupName:
        description: 'Name of the Action Group'
        required: true
        type: string
      tagKey:
        description: 'Tag Key to filter VMs'
        required: true
        type: string
        default: 'Environment'
      tagValue:
        description: 'Tag Value to filter VMs'
        required: true
        type: string
        default: 'Production'
      actionGroupSubscriptionId:
        description: 'Subscription ID containing the Action Group'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-and-apply:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        enable-AzPSSession: true

    - name: 'Install Az PowerShell module'
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser

    - name: 'Run alert generation script'
      shell: pwsh
      run: |
        ./GenerateTerraformRecommendedAlertsCode.ps1 `
          -AlertsResourceGroupName "${{ github.event.inputs.alertsResourceGroupName }}" `
          -ActionGroupResourceGroupName "${{ github.event.inputs.actionGroupResourceGroupName }}" `
          -ActionGroupName "${{ github.event.inputs.actionGroupName }}" `
          -TagKey "${{ github.event.inputs.tagKey }}" `
          -TagValue "${{ github.event.inputs.tagValue }}" `
          -ActionGroupSubscriptionId "${{ github.event.inputs.actionGroupSubscriptionId }}"

    - name: Commit Terraform Configuration
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add *.tf
        git commit -m "feat: Update Azure VM alert configurations" || echo "No changes to commit"
        git push

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.7.0"

    - name: 'Terraform Init'
      run: terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: 'Terraform Validate'
      run: terraform validate

    - name: 'Terraform Plan'
      run: terraform plan -out=tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: 'Terraform Apply'
      run: terraform apply -auto-approve tfplan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 